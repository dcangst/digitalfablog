# Generated by Django 2.0.6 on 2018-07-18 14:59

import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import members.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('cashier', '0001_initial'),
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('first_name', models.CharField(max_length=50, verbose_name='first name')),
                ('middle_name', models.CharField(blank=True, max_length=50, verbose_name='middle name')),
                ('last_name', models.CharField(max_length=150, verbose_name='last name')),
                ('street_and_number', models.CharField(max_length=150, verbose_name='Street and number')),
                ('zip_code', models.CharField(max_length=150, verbose_name='ZIP Code')),
                ('city', models.CharField(max_length=150, verbose_name='City')),
                ('phone', models.CharField(max_length=150, verbose_name='Phone')),
                ('birthday', models.DateField(verbose_name='Birthday')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
                'ordering': ['last_name', 'first_name'],
                'permissions': (('view_members', 'Can view members'),),
            },
            managers=[
                ('objects', members.models.CustomUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Membership',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateField(default=datetime.date(2018, 1, 1), help_text='First day of membership', verbose_name='membership start date')),
                ('end_date', models.DateField(default=datetime.date(2018, 12, 31), help_text='Last day of membership', verbose_name='membership end date')),
                ('legitimation', models.ImageField(blank=True, null=True, upload_to=members.models.legitimation_image_path)),
                ('booking', models.OneToOneField(null=True, on_delete=django.db.models.deletion.PROTECT, to='cashier.Booking')),
                ('member', models.ForeignKey(null=True, on_delete=django.db.models.deletion.PROTECT, related_name='membership', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Membership',
                'verbose_name_plural': 'Membership',
                'ordering': ['end_date'],
            },
        ),
    ]
